type HugoDao @entity {
  # DAO address
  id: ID!

  # proposals info
  proposalsCount: Int!
}

type Proposal @entity {
  # proposal id
  id: ID!

  # we get this from creation proposal
  proposer: Bytes!
  targets: [Bytes!]
  values: [BigInt!]
  signatures: [String!]
  calldatas: [Bytes!]
  startBlock: BigInt!
  endBlock: BigInt!
  title: String!
  description: String!
  category: Int!

  # collect from votes and etc.
  forVotes: BigInt!
  againstVotes: BigInt!
  abstainVotes: BigInt!

  canceled: Boolean!
  executed: Boolean!
  eta: BigInt!

  createdAt: BigInt!

  receipts: [Receipt!]! @derivedFrom(field: "proposal")
}

type Receipt @entity {
    # just INT
    id: ID!

    proposal: Proposal!

    voter: Bytes!
    support: Int!
    votes: BigInt!

    createdAt: BigInt!
}

type HugoToken @entity {
    id: ID!

    holdersCount: Int!
    distributed: BigInt!
    burned: BigInt!

    dayData: [TokenDayData!]! @derivedFrom(field: "token")
    holders: [Holder!]! @derivedFrom(field: "token")
}

type TokenDayData @entity {
    id: ID!
    date: Int!
    token: HugoToken!

    # stats
    dailyTransactionsCount: Int!
    dailyFees: BigInt!
}

type Holder @entity {
    id: ID!
    token: HugoToken!

    transfersCount: Int!
    balance: BigInt! # that is not real balance
    feesAccrued: BigInt!
    feesPaid: BigInt!
}
